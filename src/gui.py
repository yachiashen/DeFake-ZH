import re
from sympy import false
import gradio as gr


try:
    from .scores import *
    from .interface import *
    from .contradictionGUI import *
except:
    from scores import *
    from interface import *
    from contradictionGUI import *

lang_options = {
    "繁體中文": {
        "title": "假新聞偵測器",
        "description": "輸入一篇新聞標題與內文，系統將分析語氣與真假判斷",
        "input_title": "新聞標題",
        "input_content": "新聞內文",
        "submit_btn": "-- 提交 --",
        "clear_btn": "-- 清除 --",
        "accordion_label": "點我展開查看詳細分析",
        "result": "分析結果",
        "disclaimer": "<div align='center'><small>⚠️ 本系統僅供參考，分析結果來自機器學習模型，請勿視為最終真實依據。 ⚠️</small></div>"
    },
    "English": {
        "title": "Fake News Detector for Chinese",
        "description": "Enter the headline and content to analyze its truthfulness and tone.",
        "input_title": "News Title",
        "input_content": "News Content",
        "submit_btn": "-- SUBMIT --",
        "clear_btn": "-- CLEAR --",
        "accordion_label": "Click to show detailed analysis",
        "result": "Results",
        "disclaimer": "<div align='center'><small>⚠️ This system is for reference only. The analysis is generated by a machine learning model and should not be considered factual. ⚠️</small></div>"
    }
}

# def update_labels(language):
#     config = lang_options[language]
#     return (
#         gr.update(label=config["input_title"]),
#         gr.update(label=config["input_content"]),
#         gr.update(value="", label=config["result"]),
#         config["title"],
#         config["description"],
#         gr.update(value=config["submit_btn"]),
#         gr.update(value=config["clear_btn"])
#     )
def update_labels(language):
    config = lang_options[language]
    return (
        gr.update(label=config["input_title"]),
        gr.update(label=config["input_content"]),
        gr.update(label=config["result"]),
        gr.update(value=config["submit_btn"]),
        gr.update(value=config["clear_btn"]),
        gr.update(value=config["title"]),          # Markdown
        gr.update(value=config["description"]),    # Markdown
        gr.update(label=config["accordion_label"]),
        gr.update(value=config["disclaimer"])
    )

def interface_fn(title, content):
    yield "［1/3］正在分析標題與內文...", "", "", "", "", ""

    news_sentences, title_dict, sentences_dict, sentence_summary_scores, prob = get_all_scores(title, content)
    # news_sentences, title_dict, sentences_dict, sentence_summary_scores, prob, is_fake = [], dict(), dict(), dict(), 0, False

    score = prob * 100
    if score > 67:
        judgment = "高機率假新聞"
    elif score < 34:
        judgment = "高可信度真新聞"
    else:
        judgment = "可能為真也可能為假，建議進一步查證"
    summary = f"經過系統判斷此新聞為【{judgment}】\n\n"
    summary += f"預測為假新聞的機率：{score:.2f}%\n"
    # summary = f"預測為假新聞的機率：{prob * 100:.2f}%  ->  {'假' if is_fake else '真'}新聞\n\n"
    summary += "句子綜合分數：\n"
    for k, v in sentence_summary_scores.items():
        summary += f"・ {k}：{v:.2f}\n"

    
    detail = "<h3 style='color: orange;'>標題分析：</h3>\n\n"
    for k, v in title_dict.items():
        detail += f"- {k}：{v:.2f}\n"

    detail += "\n<h3 style='color: orange;'>內文句子分析：</h3>\n"
    for sent in news_sentences:
        detail += f"\n> {sent}\n"
        for term in ['情感分析', '主觀性']:
            detail += f"- {term}：{sentences_dict[sent][term]:.2f}\n"

    yield summary, detail + "\n\n［2/3］語氣分析完成，正在搜尋資料庫...", "", "", "", ""

    ### MGP Part
    mgp_html_title_update, mgp_html_output_update, mgp_description = update_mgp_part(title, content)
    detail += f"\n<h3 style='color: orange;'>MGP 資料搜尋結果：</h3>\n\n"
    detail += mgp_description + "\n\n"

    yield summary, detail + "\n\n［3/3］資料庫比對完成，正在檢查邏輯矛盾...", mgp_html_title_update, mgp_html_output_update, "", ""

    ### Contradiction Part
    contrad_html_title_update, contrad_html_output_update, contrad_description = update_contradiction_part(title, content)
    detail += f"\n<h3 style='color: orange;'>三元組搜尋矛盾結果：</h3>\n\n"
    detail += contrad_description
    
    yield summary, detail, mgp_html_title_update, mgp_html_output_update, contrad_html_title_update, contrad_html_output_update
    # return summary, detail

with gr.Blocks() as demo:
    # gr.Markdown("# DeFake-ZH")
    with gr.Row():
        with gr.Column(scale=5, min_width=400):
            gr.Markdown('<div align="center"><h1>DeFake-ZH</h1></div>')
        with gr.Column(scale=1, min_width=150):
            lang = gr.Dropdown(["繁體中文", "English"], label="", value="繁體中文")
        
    # lang = gr.Dropdown(["繁體中文", "English"], label="Language 語言", value="繁體中文")
    title_markdown = gr.Markdown("## 假新聞偵測器")
    desc_markdown = gr.Markdown("輸入一篇新聞標題與內文，系統將分析語氣與真假判斷")

    with gr.Row():
        with gr.Column():
            title_input = gr.Textbox(label="新聞標題")
            content_input = gr.Textbox(label="新聞內文", lines=6)
            with gr.Row():
                clear_btn = gr.Button(value="-- 清除 --")
                submit_btn = gr.Button(value="-- 提交 --")
                

        with gr.Column():
            # output_summary = gr.Markdown("### 分析結果")
            output_summary = gr.Textbox(label="分析結果")
            with gr.Accordion(label="點我展開查看詳細分析", open=False) as accordion_box:
                output_detail = gr.Markdown()
    ## MGP Part
    mgp_html_title = gr.HTML()
    mgp_html_output = gr.HTML()
    set_mgp_hidden_button(mgp_html_output)
    
    ## Contradiction Part 
    contradictory_html_title = gr.HTML()
    contradictory_html_output = gr.HTML()
    set_contradiction_hidden_button(contradictory_html_output)
        
    disclaimer_text = gr.Markdown(lang_options["繁體中文"]["disclaimer"])
    
    lang.change(
        update_labels,
        inputs=lang,

        outputs=[
            title_input, content_input, output_summary,
            submit_btn, clear_btn,
            title_markdown, desc_markdown,
            accordion_box,
            disclaimer_text
        ]
    )
    
    submit_btn.click(
        fn=interface_fn,
        inputs=[title_input, content_input],
        outputs=[output_summary, output_detail, mgp_html_title, mgp_html_output, 
        contradictory_html_title, contradictory_html_output]
    )

    clear_btn.click(
        fn=lambda: ("", "", "", "", "", "", "", ""),
        outputs=[title_input, content_input, output_summary, output_detail, 
                 mgp_html_title, mgp_html_output, contradictory_html_title, contradictory_html_output]
    )

# demo = gr.Interface(
#     fn=interface_fn,
#     inputs=[
#         gr.Textbox(label="新聞標題", lines=1, placeholder="請輸入新聞標題"),
#         gr.Textbox(label="新聞內文", lines=10, placeholder="請輸入新聞內容")
#     ],
#     outputs=gr.Textbox(label="分析結果"),
#     title="DeFake-ZH",
#     description="輸入一篇新聞標題與內文，系統將分析語氣與真假判斷"
# )


if __name__ == "__main__":
    demo.launch(share=false)